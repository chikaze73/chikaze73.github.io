<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Servlet编码没问题，但Network下servlet中的preview无显示</title>
    <url>/2021/05/26/JavaWeb/Servlet%E7%BC%96%E7%A0%81%E6%B2%A1%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BD%86Network%E4%B8%8Bservlet%E4%B8%AD%E7%9A%84preview%E6%97%A0%E6%98%BE%E7%A4%BA/</url>
    <content><![CDATA[<h2 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h2><span id="more"></span>
<h3 id="1-f12-找到设置"><a href="#1-f12-找到设置" class="headerlink" title="1.f12 找到设置"></a>1.f12 找到设置</h3><p><img src="/.../.../../../../../img/JavaWeb-Q.png" alt="p1" title="p1">  </p>
<h3 id="2-底部找到restore点击更新"><a href="#2-底部找到restore点击更新" class="headerlink" title="2.底部找到restore点击更新"></a>2.底部找到restore点击更新</h3><p><img src="/.../.../../../../../img/JavaWeb-Q2.png" alt="p2" title="p2">  </p>
<h3 id="3-可以查看到了"><a href="#3-可以查看到了" class="headerlink" title="3.可以查看到了"></a>3.可以查看到了</h3><p><img src="/.../.../../../../../img/JavaWeb-Q3.png" alt="p3" title="p3">  </p>
<h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><p>可能误点击到了filter</p>
]]></content>
      <tags>
        <tag>JavaWeb-Q</tag>
      </tags>
  </entry>
  <entry>
    <title>对于PreparedStatement或CallableStatement，方法executeQuery()不能带有参数</title>
    <url>/2021/05/26/JavaWeb/%E5%AF%B9%E4%BA%8E-PreparedStatement-%E6%88%96-CallableStatement%EF%BC%8C%E6%96%B9%E6%B3%95-executeQuery-%E4%B8%8D%E8%83%BD%E5%B8%A6%E6%9C%89%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<p>Q：提示 对于 PreparedStatement 或 CallableStatement，方法 executeQuery() 不能带有参数  </p>
<span id="more"></span>

<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql=<span class="string">&quot;select*from[demo]whereusername=?andpassword=?&quot;</span>;</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(sql);</span><br><span class="line">pstmt.setString(<span class="number">1</span>,username);</span><br><span class="line">pstmt.setString(<span class="number">2</span>,password);</span><br><span class="line">ResultSetrs=pstmt.executeQuery();</span><br></pre></td></tr></table></figure>


<h3 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h3><p>继承了Statement接口中所有方法的PreparedStatement接口都有自己的executeQuery，executeUpdate和execute方法。Statement对象本身不包含SQL语句，因而必须给Statement.execute方法提供SQL语句作为参数。PreparedStatement对象并不将SQL语句作为参数提供给这些方法，因为它们已经包含预编译SQL语句。CallableStatement对象继承这些方法的PreparedStatement形式。对于这些方法的PreparedStatement或CallableStatement版本，使用查询参数将抛出SQLException。</p>
]]></content>
      <tags>
        <tag>JavaWeb-Q</tag>
      </tags>
  </entry>
  <entry>
    <title>idea连接sqlserver数据库</title>
    <url>/2021/05/31/JavaWeb/idea%E8%BF%9E%E6%8E%A5sqlserver%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>确定数据库的类型 SQL serve<br>数据库连接 驱动类型、数据库地址、数据库的用户和密码  </p>
<span id="more"></span>
<blockquote>
<p>1.建立连接<br>2.输送sql语句<br>3.得到sql语句 返回结果  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"> String drivername = <span class="string">&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;</span>;</span><br><span class="line"><span class="comment">//数据库使用实例情况</span></span><br><span class="line"><span class="comment">//String dburl = &quot;jdbc:sqlserver://localhost:1433;instancename = SQLEXPRESS;(自己的) DatabaseName= test1; integratedSecurity=true;(表示windows验证)&quot;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数据库默认实例情况</span></span><br><span class="line">        String dburl = <span class="string">&quot;jdbc:sqlserver://localhost:1433;DatabaseName=test1;&quot;</span>;</span><br><span class="line">        String dbuser = <span class="string">&quot;sa&quot;</span>;</span><br><span class="line">        String dbpwd = <span class="string">&quot;sa&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Class.forName(drivername);</span><br><span class="line">            Connection conn = DriverManager.getConnection(dburl,dbuser,dbpwd);</span><br><span class="line">            System.out.println(<span class="string">&quot;数据库连接成功！&quot;</span>);</span><br><span class="line">            Statement stmt = conn.createStatement();</span><br><span class="line">            String sql = <span class="string">&quot;select * from [demo]&quot;</span>;</span><br><span class="line">            ResultSet rs = stmt.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span>(rs.next())&#123;</span><br><span class="line">                System.out.println(rs.getString(<span class="string">&quot;id&quot;</span>)+ <span class="string">&quot; &quot;</span>+rs.getString(<span class="string">&quot;username&quot;</span>)+ <span class="string">&quot; &quot;</span> +rs.getString(<span class="string">&quot;password&quot;</span>)+ <span class="string">&quot; &quot;</span> +rs.getString(<span class="string">&quot;phone&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>JavaWeb-Q</tag>
      </tags>
  </entry>
  <entry>
    <title>dos常用命令</title>
    <url>/2021/06/20/extra/dos%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="一、打开CMD方式"><a href="#一、打开CMD方式" class="headerlink" title="一、打开CMD方式"></a>一、打开CMD方式</h1><span id="more"></span>
<ol>
<li>开始+系统+命令提示符  </li>
<li>Win键+R 输入cmd打开控制台  </li>
<li>在任意文件下，按住shift+鼠标右击，打开命令行窗口  </li>
<li>资源管理器的地址栏前面加上cmd与空格    以管理员方式运行  </li>
</ol>
<h1 id="常用的dos命令"><a href="#常用的dos命令" class="headerlink" title="常用的dos命令"></a>常用的dos命令</h1><ol>
<li><p>盘符切换 直接”盘符”:  </p>
</li>
<li><p>查看当前目录下所有的文件 dir  </p>
</li>
<li><p>切换目录  cd directory  </p>
</li>
<li><p>从一个盘进入到另一个盘  cd /d 盘符:   (/d参数可以实现跨盘)</p>
</li>
<li><p>清理屏幕  cls (clear screen)  </p>
</li>
<li><p>退出终端  exit  </p>
</li>
<li><p>打开应用  eg. calc、mspaint、notepad  </p>
</li>
<li><p>ping命令  ping <a href="http://www.baidu.com(网址)/">www.baidu.com(网址)</a>  得到IP信息  </p>
</li>
<li><p>ipconfig命令  查看电脑配置、IP等</p>
</li>
<li><p>文件操作  </p>
<blockquote>
<p>创建目录：md 目录名<br>删除目录：rd 目录名<br>新建文件：cd&gt; 文件名<br>删除文件：del 文件名</p>
</blockquote>
<p>/  :参数斜杠<br>\  :文件斜杠</p>
</li>
</ol>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>NotePad++右键无提示</title>
    <url>/2021/06/21/extra/NotePad-%E5%8F%B3%E9%94%AE%E6%97%A0%E6%8F%90%E7%A4%BA/</url>
    <content><![CDATA[<ol>
<li>windows + R运行，在运行窗口中输入 regedit，进入注册表编辑器    <span id="more"></span></li>
<li>在左边的地址栏中输入\HKEY_CLASSES_ROOT*\shell  </li>
<li>在shell上右键–新建项，命名为edit with notepad++  </li>
<li>在新建的项edit with notepad++上右键，然后新建一个项，命名为command，新建了command之后选中command项会发现右边有相应的值，双击默认进行修改  </li>
<li>双击默认后对其值进行修改，先写notepad++的安装路径，然后写上“%1”，点击确定，在任意文件上右键都会有edit with notepad++选项  </li>
</ol>
<p><img src="/../../img/notepad++.png" alt="notepad++" title="notepad++">  </p>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>idea快捷键</title>
    <url>/2021/06/20/extra/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="一、Ctrl-快捷键"><a href="#一、Ctrl-快捷键" class="headerlink" title="一、Ctrl 快捷键"></a>一、Ctrl 快捷键</h1><span id="more"></span>
<table>
<thead>
<tr>
<th>快捷键</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl + F</td>
<td>在当前文件进行文本查找</td>
</tr>
<tr>
<td>Ctrl + R</td>
<td>在当前文件进行文本替换</td>
</tr>
<tr>
<td>Ctrl + Z</td>
<td>撤销</td>
</tr>
<tr>
<td>Ctrl + Y</td>
<td>删除光标所在行 或 删除选中的行</td>
</tr>
<tr>
<td>Ctrl + X</td>
<td>剪切光标所在行 或 剪切选择内容</td>
</tr>
<tr>
<td>Ctrl + D</td>
<td>复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面</td>
</tr>
<tr>
<td>Ctrl + W</td>
<td>递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围</td>
</tr>
<tr>
<td>Ctrl + H</td>
<td>显示当前类的层次结构</td>
</tr>
<tr>
<td>Ctrl + O</td>
<td>选择可重写的方法</td>
</tr>
<tr>
<td>Ctrl + I</td>
<td>选择可继承的方法</td>
</tr>
<tr>
<td>Ctrl + Space</td>
<td>基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 Ctrl + 逗号</td>
</tr>
<tr>
<td>Ctrl + 左方向键</td>
<td>光标跳转到当前单词 / 中文句的左侧开头位置</td>
</tr>
<tr>
<td>Ctrl + 右方向键</td>
<td>光标跳转到当前单词 / 中文句的右侧开头位置</td>
</tr>
<tr>
<td>Ctrl + Delete</td>
<td>删除光标后面的单词或是中文句</td>
</tr>
<tr>
<td>Ctrl + BackSpace</td>
<td>删除光标前面的单词或是中文句</td>
</tr>
<tr>
<td>Ctrl + Alt + L</td>
<td>缩进</td>
</tr>
<tr>
<td>Ctrl + Alt + V</td>
<td>自动补全类和对象名</td>
</tr>
<tr>
<td>Ctrl + Alt + T</td>
<td>自动生成代码块包裹</td>
</tr>
<tr>
<td>Ctrl + /</td>
<td>单行注释</td>
</tr>
<tr>
<td>Ctrl + shift + /</td>
<td>多行注释</td>
</tr>
</tbody></table>
<h1 id="二、Alt-快捷键"><a href="#二、Alt-快捷键" class="headerlink" title="二、Alt 快捷键"></a>二、Alt 快捷键</h1><table>
<thead>
<tr>
<th>快捷键</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Alt + Enter</td>
<td>IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同</td>
</tr>
<tr>
<td>Alt + Insert</td>
<td>代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等</td>
</tr>
</tbody></table>
<h1 id="三、F系列"><a href="#三、F系列" class="headerlink" title="三、F系列"></a>三、F系列</h1><table>
<thead>
<tr>
<th>快捷键</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>F2或者shift+F2</td>
<td>高亮错误或警告快速定位</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows快捷键</title>
    <url>/2021/06/20/extra/Windows%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="Windows快捷键"><a href="#Windows快捷键" class="headerlink" title="Windows快捷键"></a>Windows快捷键</h1><p><kbd>Ctrl</kbd>+<kbd>C</kbd> ：复制<br><kbd>Ctrl</kbd>+<kbd>V</kbd> ：粘贴<br><kbd>Ctrl</kbd>+<kbd>X</kbd> ：剪切  </p>
<span id="more"></span>
<p><kbd>Ctrl</kbd>+<kbd>Z</kbd> ：撤销<br><kbd>Ctrl</kbd>+<kbd>F</kbd> ：寻找<br><kbd>Ctrl</kbd>+<kbd>Home</kbd> ：当前窗口或文档的最上端<br><kbd>Ctrl</kbd>+<kbd>End</kbd> ：当前窗口或文档的最下端<br><kbd>Ctrl</kbd>+<kbd>←</kbd> ：实现两个窗口对比<br><kbd>Ctrl</kbd>+<kbd>↓</kbd> ：缩小窗口/向下还原窗口<br><kbd>Ctrl</kbd>+<kbd>A</kbd> ：全选<br><kbd>Ctrl</kbd>+<kbd>S</kbd> ：保存  </p>
<p><kbd>Alt</kbd>+<kbd>F4</kbd> ：关闭窗口（下班快乐键）<br><kbd>Alt</kbd>+<kbd>Tab</kbd> ：快速切换多窗口  </p>
<p><kbd>Win</kbd>+<kbd>N</kbd> ：调用便签<br><kbd>Win</kbd>+<kbd>D</kbd> ：显示桌面<br><kbd>Win</kbd>+<kbd>R</kbd> ：调用运行窗口<br><kbd>Win</kbd>+<kbd>M</kbd> ：最小化所有窗口<br><kbd>Win</kbd>+<kbd>Tab</kbd> ：显示打开的所有窗口<br><kbd>Win</kbd>+<kbd>L</kbd> ：锁定电脑<br><kbd>Win</kbd>+<kbd>U</kbd> ：打开系统设置<br><kbd>Win</kbd>+<kbd>E</kbd> ：打开文件管理器/我的电脑<br><kbd>Win</kbd>+<kbd>T</kbd> ：任务栏上固定的应用之间相互切换<br><kbd>Win</kbd>+<kbd>1/2/…N</kbd> ：任务栏上固定的应用之间相互切换<br><kbd>Win</kbd>+<kbd>N</kbd> ：调用便签</p>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown使用文档</title>
    <url>/2021/04/22/extra/markdown%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>使用#，二级到六级依次递增#<br>  <br>  </p>
<span id="more"></span>
<h1 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h1><h2 id="1-字体"><a href="#1-字体" class="headerlink" title="1.字体"></a>1.字体</h2><p><em>斜体</em>：使用* … *  或者 _ … _<br><strong>粗体</strong>: 使用** …** 或者 __ … __<br><em><strong>粗斜体</strong></em>：使用*** … ***或者 ___…___  </p>
<h2 id="2-分割线"><a href="#2-分割线" class="headerlink" title="2.分割线"></a>2.分割线</h2><hr>
<hr>
<hr>
<p>使用形式***,—,___  </p>
<h2 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3.删除线"></a>3.删除线</h2><p><del>把我删除</del>：使用~~…~~  </p>
<h2 id="4-使用下划线"><a href="#4-使用下划线" class="headerlink" title="4.使用下划线"></a>4.使用下划线</h2><p><u>我是带下划线的内容</u>：使用标签 &lt;u&gt;…&lt;/u&gt;  </p>
<h2 id="5-脚注"><a href="#5-脚注" class="headerlink" title="5.脚注"></a>5.脚注</h2><p>Markdown<a href="Markdown%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BA%AF%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80">^1</a>可以效率的书写文档  </p>
<br>

<h1 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h1><h2 id="1-有序列表"><a href="#1-有序列表" class="headerlink" title="(1)有序列表"></a>(1)有序列表</h2><ol>
<li>数字加点  </li>
<li>再加空格<h2 id="2-无序列表"><a href="#2-无序列表" class="headerlink" title="(2)无序列表"></a>(2)无序列表</h2></li>
</ol>
<ul>
<li>可以使用*</li>
</ul>
<ul>
<li>可以使用-  </li>
</ul>
<ul>
<li>可以使用+<h2 id="3-列表嵌套"><a href="#3-列表嵌套" class="headerlink" title="(3)列表嵌套"></a>(3)列表嵌套</h2></li>
</ul>
<ol>
<li>列表1  <ul>
<li>只需要在下层加tab  </li>
<li>其余操作一致  </li>
</ul>
</li>
<li>列表2  <ul>
<li>这是子项目1  </li>
<li>这是子项目2  <br></li>
</ul>
</li>
</ol>
<h1 id="四、区块"><a href="#四、区块" class="headerlink" title="四、区块"></a>四、区块</h1><h2 id="1-简单使用"><a href="#1-简单使用" class="headerlink" title="1.简单使用"></a>1.简单使用</h2><blockquote>
<p>markdown  </p>
<blockquote>
<p>嵌套使用markdown<br>使用方法：&gt; ….;嵌套一层使用&gt;&gt;,以此类推  </p>
</blockquote>
</blockquote>
<h2 id="2-区块和列表相结合"><a href="#2-区块和列表相结合" class="headerlink" title="2.区块和列表相结合"></a>2.区块和列表相结合</h2><h3 id="1-区块中使用列表"><a href="#1-区块中使用列表" class="headerlink" title="(1)区块中使用列表"></a>(1)区块中使用列表</h3><blockquote>
<p>我是区块  </p>
<ol>
<li>我是有序列表  </li>
<li>我是有序列表  </li>
</ol>
<ul>
<li>我是无序列表  </li>
</ul>
<ul>
<li>我是无序列表  </li>
</ul>
</blockquote>
<h3 id="2-列表中使用区块"><a href="#2-列表中使用区块" class="headerlink" title="(2)列表中使用区块"></a>(2)列表中使用区块</h3><ol>
<li>我是有序列表<blockquote>
<p>我是区块  </p>
<blockquote>
<p>我是内层区块  </p>
</blockquote>
</blockquote>
</li>
<li>无序列表一样使用  <br></li>
</ol>
<h1 id="五、代码"><a href="#五、代码" class="headerlink" title="五、代码"></a>五、代码</h1><h2 id="1-段落中的代码"><a href="#1-段落中的代码" class="headerlink" title="(1)段落中的代码"></a>(1)段落中的代码</h2><p><code>this is a test</code><br>  使用`……`  </p>
<h2 id="2-代码块"><a href="#2-代码块" class="headerlink" title="(2)代码块"></a>(2)代码块</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个代码块</span><br><span class="line">可以指定语言  </span><br><span class="line">也可不指定  </span><br><span class="line">使用<span class="code">```.....```</span>即可</span><br></pre></td></tr></table></figure>
<h1 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h1><h2 id="1-简单使用-1"><a href="#1-简单使用-1" class="headerlink" title="(1)简单使用"></a>(1)简单使用</h2><p><a href="http://www.baidu.com/">百度</a><br><a href="http://www.baidu.com/">http://www.baidu.com/</a><br>使用：<br>1.[链接名称](链接地址)<br>注意两括号之间不要空格  </p>
<p> 2.直接&lt;链接地址&gt;</p>
<h2 id="2-高级链接"><a href="#2-高级链接" class="headerlink" title="(2)高级链接"></a>(2)高级链接</h2><p>对网址使用变量  </p>
<p>百度<a href="(http://www.baidu.com/)">百度</a>  </p>
<p>教育宝<a href="https://www.jiaoyubao.cn/">教育宝</a>  </p>
<p>注意：在编写时，脚注和原文要换行才能实现文字链接的效果<br><br></p>
<h1 id="七、图片的使用"><a href="#七、图片的使用" class="headerlink" title="七、图片的使用"></a>七、图片的使用</h1><h2 id="1-简单使用-2"><a href="#1-简单使用-2" class="headerlink" title="(1)简单使用"></a>(1)简单使用</h2><p><img src="/../../img/avatar.png" alt="nami" title="nami">  </p>
<p><img src="http://static.runoob.com/images/runoob-logo.png" alt="RUNOOB 图标" title="鼠标悬于图片上会出现的title">  </p>
<h2 id="2-使用变量"><a href="#2-使用变量" class="headerlink" title="(2)使用变量"></a>(2)使用变量</h2><p>LOGO<a href="http://static.runoob.com/images/runoob-logo.png">logo</a>  </p>
<h2 id="3-使用img标签-自定义宽高"><a href="#3-使用img标签-自定义宽高" class="headerlink" title="(3)使用img标签(自定义宽高)"></a>(3)使用img标签(自定义宽高)</h2>  <img src="https://www.jiaoyubao.cn/images/logo_2.png" width="200" height="110">  
  <br>
   &emsp; &emsp; <img src="/../../img/avatar.png" width="100" height="100">  
   (用 &emsp ; 实现空格的插入)  
  
   
<br> 
<br>

<h1 id="八、表格"><a href="#八、表格" class="headerlink" title="八、表格"></a>八、表格</h1><h2 id="1-简单使用-3"><a href="#1-简单使用-3" class="headerlink" title="(1)简单使用"></a>(1)简单使用</h2><p>   使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行    </p>
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody><tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody></table>
<h2 id="2-对齐方式"><a href="#2-对齐方式" class="headerlink" title="(2)对齐方式"></a>(2)对齐方式</h2><p>:-设置内容和标题栏居左对齐。</p>
<p>-: 设置内容和标题栏居右对齐。</p>
<p>:-: 设置内容和标题栏居中对齐。   </p>
<table>
<thead>
<tr>
<th align="left">左对齐表头</th>
<th align="right">右对齐表头</th>
<th align="center">居中对齐表头</th>
</tr>
</thead>
<tbody><tr>
<td align="left">左对齐</td>
<td align="right">右对齐</td>
<td align="center">居中对齐</td>
</tr>
<tr>
<td align="left">左对齐</td>
<td align="right">右对齐</td>
<td align="center">居中对齐</td>
</tr>
<tr>
<td align="left">左对齐</td>
<td align="right">右对齐</td>
<td align="center">居中对齐</td>
</tr>
</tbody></table>
<br>

<h1 id="九、补充"><a href="#九、补充" class="headerlink" title="九、补充"></a>九、补充</h1><h2 id="1-支持的html标签"><a href="#1-支持的html标签" class="headerlink" title="(1)支持的html标签"></a>(1)支持的html标签</h2><p>HTML 元素有：&lt;kdb&gt;&lt;b&gt;&lt;i&gt;&lt;em&gt;&lt;sup&gt;&lt;sub&gt;&lt;br&gt;  </p>
<p><kbd>Ctrl</kbd>+<kbd>C</kbd> 复制<br><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>A</kbd> QQ截图<br>(注：&lt;kbd&gt;标签用于定义键盘文本。它表示文本是从键盘上键入的。它经常用在与计算机相关的文档或手册中。)  </p>
<h2 id="2-转义"><a href="#2-转义" class="headerlink" title="(2)转义"></a>(2)转义</h2><p>以下可以使用\来进行转义  </p>
<p>\  反斜杠<br>`   反引号<br>*   星号<br>_   下划线<br>{}  花括号<br>[]  方括号<br>()  小括号<br>#   井字号<br>+   加号<br>-   减号<br>.   英文句点<br>!   感叹号<br><br>  </p>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>使用idea生成javadoc文档</title>
    <url>/2021/06/23/extra/%E4%BD%BF%E7%94%A8idea%E7%94%9F%E6%88%90javadoc%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<ol>
<li><p>打开 idea，点击 Tools-&gt; Generate JavaDoc，会打开生成 javadoc 文档的配置页面。</p>
<span id="more"></span>
<p><img src="/../../img/IDEA-javadoc%E9%85%8D%E7%BD%AE.png" alt="配置" title="配置"> </p>
</li>
<li><p>选择想要生成的javadoc范围</p>
</li>
<li><p>选择输出路径</p>
</li>
<li><p>配置<code>-encoding utf-8 -charset utf-8</code>防止中文乱码</p>
</li>
<li><p>点击OK</p>
</li>
<li><p>可在对应路径下的index.html中查看</p>
</li>
</ol>
<p> <img src="/../../img/javadoc-%E7%A4%BA%E4%BE%8B.png" alt="示例" title="示例"> </p>
]]></content>
      <categories>
        <category>extra</category>
      </categories>
      <tags>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL语句(定义与维护)</title>
    <url>/2021/05/18/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/SQL%E8%AF%AD%E5%8F%A5(%E5%AE%9A%E4%B9%89%E4%B8%8E%E7%BB%B4%E6%8A%A4)/</url>
    <content><![CDATA[<p><strong>SQL的功能主要包括：数据定义，数据查询，数据操作，数据控制</strong>  </p>
<span id="more"></span>  

<table>
<thead>
<tr>
<th>SQL功能</th>
<th>对应命令</th>
</tr>
</thead>
<tbody><tr>
<td>数据定义</td>
<td>create、drop、alter</td>
</tr>
<tr>
<td>数据查询</td>
<td>select</td>
</tr>
<tr>
<td>数据操纵</td>
<td>insert、update、delete</td>
</tr>
<tr>
<td>数据控制</td>
<td>grant、revoke、deny</td>
</tr>
</tbody></table>
<br> 

<h1 id="一、数据库定义及维护"><a href="#一、数据库定义及维护" class="headerlink" title="一、数据库定义及维护"></a>一、数据库定义及维护</h1><h2 id="一-数据库定义"><a href="#一-数据库定义" class="headerlink" title="(一)数据库定义"></a>(一)数据库定义</h2><p>   <code>create database database_name</code>  </p>
<h2 id="二-数据库维护"><a href="#二-数据库维护" class="headerlink" title="(二)数据库维护"></a>(二)数据库维护</h2><p><code>alter database</code>  </p>
<h1 id="二、表定义及维护"><a href="#二、表定义及维护" class="headerlink" title="二、表定义及维护"></a>二、表定义及维护</h1><h2 id="一-表定义"><a href="#一-表定义" class="headerlink" title="(一)表定义"></a>(一)表定义</h2><p><code>create table table_name</code>  </p>
<h2 id="二-表维护"><a href="#二-表维护" class="headerlink" title="(二)表维护"></a>(二)表维护</h2><blockquote>
<p>alter table table_name<br>add<br>drop column<br>alter column<br><br>  </p>
</blockquote>
<h1 id="三、完整性定义及维护"><a href="#三、完整性定义及维护" class="headerlink" title="三、完整性定义及维护"></a>三、完整性定义及维护</h1><h2 id="一-完整性约束定义"><a href="#一-完整性约束定义" class="headerlink" title="(一)完整性约束定义"></a>(一)完整性约束定义</h2><p>增加约束  </p>
<p>alter table table_name<br>add constraint constraint_name<br><br>  </p>
<h3 id="1-实体完整性"><a href="#1-实体完整性" class="headerlink" title="(1)实体完整性"></a>(1)实体完整性</h3><p>可通过索引、unique约束等实现<br>eg1.为员工添加主码  </p>
<blockquote>
<p>alter table 员工表<br>add constraint pk_yg primary key(员工编号)  </p>
</blockquote>
<p>eg2.为薪资表的薪级名称列添加unique约束  </p>
<blockquote>
<p>alter table 薪资表<br>add constraint u_xinziname unique(薪级名称)<br><br></p>
</blockquote>
<h3 id="2-用户自定义完整性"><a href="#2-用户自定义完整性" class="headerlink" title="(2)用户自定义完整性"></a>(2)用户自定义完整性</h3><p>可以使用default、check 实现<br>其中一个列只能有一个default约束，该约束只能定义在一个列上。check约束可以对多列的取值关系做约束。如果只对新插入的数据实现约束，则可以在add前加入 with nocheck<br><br></p>
<h3 id="3-参照完整性"><a href="#3-参照完整性" class="headerlink" title="(3)参照完整性"></a>(3)参照完整性</h3><p>可以使用foreign key、触发器实现<br>eg.为员工表的薪级编号列添加外码约束，引用薪资表的薪级编号  </p>
<blockquote>
<p>alter table 员工表<br>add constraint fk_xinji<br>foreign key(薪级编号) references 薪资表(薪级编号)  </p>
</blockquote>
<br>

<h2 id="二-完整性约束维护"><a href="#二-完整性约束维护" class="headerlink" title="(二)完整性约束维护"></a>(二)完整性约束维护</h2><p>主要是删除和修改约束<br>修改约束可以通过先删除再添加<br><br>  </p>
<h1 id="四、索引定义及维护"><a href="#四、索引定义及维护" class="headerlink" title="四、索引定义及维护"></a>四、索引定义及维护</h1><p>基本格式  </p>
<blockquote>
<p>create<br>[unique] [clustered] [nonclustered]<br>index index_name<br>on table_name (column[asc|dsc][,···n])  </p>
</blockquote>
<p>(1)聚集索引：按照索引关键字顺序排列，表的物理顺序与索引关键字顺序相同。一个表上只有一个聚集索引。<br>(2)非聚集索引：表的物理顺序与索引关键字顺序不同。一个表上可以有多个聚集索引。<br>(3)唯一索引：唯一索引的索引关键字不允许重复。</p>
]]></content>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL语句(数据更改、视图)</title>
    <url>/2021/05/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/SQL%E8%AF%AD%E5%8F%A5(%E6%95%B0%E6%8D%AE%E6%9B%B4%E6%94%B9%E3%80%81%E8%A7%86%E5%9B%BE)/</url>
    <content><![CDATA[<h2 id="一、插入数据"><a href="#一、插入数据" class="headerlink" title="一、插入数据"></a>一、插入数据</h2><h3 id="1-插入元组"><a href="#1-插入元组" class="headerlink" title="(1)插入元组"></a>(1)插入元组</h3><span id="more"></span>
<blockquote>
<p>insert into table_name<br>[column_name…]<br>values<br>[value…]  </p>
</blockquote>
<h3 id="2-插入子查询结果"><a href="#2-插入子查询结果" class="headerlink" title="(2)插入子查询结果"></a>(2)插入子查询结果</h3><h4 id="1、先建立表"><a href="#1、先建立表" class="headerlink" title="1、先建立表"></a>1、先建立表</h4><blockquote>
<p>insert into table_name<br>[column…]<br>select …</p>
</blockquote>
<h4 id="2、无需先建立表"><a href="#2、无需先建立表" class="headerlink" title="2、无需先建立表"></a>2、无需先建立表</h4><blockquote>
<p>select [column…]<br>into table_name<br>from …</p>
</blockquote>
<br>

<h2 id="二、修改数据"><a href="#二、修改数据" class="headerlink" title="二、修改数据"></a>二、修改数据</h2><blockquote>
<p>update table_name<br>set column_name = expression<br>[where ….]  </p>
</blockquote>
<br>

<h2 id="三、删除数据"><a href="#三、删除数据" class="headerlink" title="三、删除数据"></a>三、删除数据</h2><p>delete [from] table_name<br>[where …]</p>
<br>

<hr>
<h2 id="一、定义视图"><a href="#一、定义视图" class="headerlink" title="一、定义视图"></a>一、定义视图</h2><blockquote>
<p>create view view_name<br>[column_name…]<br>AS &lt;select…&gt;<br>[with check option]</p>
</blockquote>
<p>(1)<code>with check option</code> 表示通过视图进行更新操作时要保证更新数据满足子查询的条件表达式。<br>(2)以下情况必须指明视图列名</p>
<ol>
<li>子查询的某个目标列是聚合函数或列表达式  </li>
<li>多表连接时出现同名列作为视图的列  </li>
<li>需在视图中指定新列名代替子查询列名  </li>
</ol>
<br>

<h2 id="二、删除视图"><a href="#二、删除视图" class="headerlink" title="二、删除视图"></a>二、删除视图</h2><p><code>drop view view_name</code><br>*注意删除的次序，先删除建立在其他表上的表，再删除”原始表”。  </p>
<h2 id="三、查询视图"><a href="#三、查询视图" class="headerlink" title="三、查询视图"></a>三、查询视图</h2><p>与查基本表一致  </p>
<h2 id="四、更新视图"><a href="#四、更新视图" class="headerlink" title="四、更新视图"></a>四、更新视图</h2><p>视图不存储数据，对其更新最终转换为对基本表的更新。<br>格式与更新基本表一致。</p>
]]></content>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL语句(数据查询)</title>
    <url>/2021/05/19/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/SQL%E8%AF%AD%E5%8F%A5(%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2)/</url>
    <content><![CDATA[<p>基本格式：<br><code>select...from...where...group by...having...order by... </code> </p>
<span id="more"></span>
<br>  

<h1 id="一、单表查询"><a href="#一、单表查询" class="headerlink" title="一、单表查询"></a>一、单表查询</h1><p><code>select...from...</code><br>选择表中元组：where<br>确定范围：between and<br>确定集合：in<br>字符串通配：like<br>基本格式  <code>[not] like &#39;&lt;匹配串&gt;&#39; [escape &#39;&lt;转义字符&gt;&#39;]</code>  </p>
<blockquote>
<p>(1)_:匹配任一字符<br>(2)%:匹配任意长度字符<br>(3)[ ]:数据列表匹配任一字符成功，该like结果为true。如果字符是连续的，可以使用“-”代表中间部分。eg. a,b,c,d[a-d]<br>(4)[^]:表示不匹配任何[ ]中的字符。  </p>
</blockquote>
<p>空值查询：null<br>多重条件查询：and、or  其中and的运算级别高于or<br>对查询结果排序：order by [asc] [desc]<br>聚合函数：常用count(*)、sum()、avg()、max()、min()<br>对组进行选择：having  其后可跟列名、聚合函数作为条件表达式。<br><br>  </p>
<h1 id="二、多表连接查询"><a href="#二、多表连接查询" class="headerlink" title="二、多表连接查询"></a>二、多表连接查询</h1><h2 id="1、内连接"><a href="#1、内连接" class="headerlink" title="1、内连接"></a>1、内连接</h2><p>join on<br>包括等值连接、非等值连接。其中等值连接去掉重复的列则为自然连接，如果连接的是两个相同的表则为自连接。  </p>
<h2 id="2、外连接"><a href="#2、外连接" class="headerlink" title="2、外连接"></a>2、外连接</h2><p>应用于例如查看哪些商品没有人购买。包括全外连接、左外连接和右外连接。<br>全外连接：<code>full [outer] join...on</code><br>左外连接：<code>left [outer] join...on</code><br>右外连接：<code>right [outer] join...on</code><br>改变表在语句中的位置，左外连接和右外连接的查询结果可以一样。<br><code>select * from A1 right join A2 on A1.no = A2.no  </code><br><code>select * from A2 left join A1 on A1.no = A2.no  </code><br><br>  </p>
<h1 id="三、子查询"><a href="#三、子查询" class="headerlink" title="三、子查询"></a>三、子查询</h1><h2 id="1、不相关子查询"><a href="#1、不相关子查询" class="headerlink" title="1、不相关子查询"></a>1、不相关子查询</h2><p>即内层查询条件不依赖于外层查询<br>eg.查询购买了”某某食品贸易部”经销的商品的学生和姓名<br><img src="/../../img/不相关子查询.png" width="400" height="200">  </p>
<h2 id="2、相关子查询"><a href="#2、相关子查询" class="headerlink" title="2、相关子查询"></a>2、相关子查询</h2><p>即内层查询条件依赖于外层查询  </p>
<h3 id="1-不带exists谓词的子查询"><a href="#1-不带exists谓词的子查询" class="headerlink" title="1)不带exists谓词的子查询"></a>1)不带exists谓词的子查询</h3><h3 id="2-带exists谓词的子查询"><a href="#2-带exists谓词的子查询" class="headerlink" title="2)带exists谓词的子查询"></a>2)带exists谓词的子查询</h3><p>eg.查询购买了商品的学生信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student where exists  </span><br><span class="line">    (select * from SaleBill where sno &#x3D; Student.no)</span><br></pre></td></tr></table></figure>

<br>  

<h2 id="3、集合查询"><a href="#3、集合查询" class="headerlink" title="3、集合查询"></a>3、集合查询</h2><p>union、交操作intersect、差操作except<br>eg.查询MIS专业或/(并且)出生晚于1999年学生的信息  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student where major &#x3D; &#39;MIS&#39;  </span><br><span class="line">union&#x2F;(intersect)  </span><br><span class="line">selcet from student where birthyear &gt; 1999</span><br></pre></td></tr></table></figure>

<br>  


<h2 id="4、基于派生表查询"><a href="#4、基于派生表查询" class="headerlink" title="4、基于派生表查询"></a>4、基于派生表查询</h2><p>及某张表是由select语句构成的<br>eg.查询购买了GN0002的商品的学生信息  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from student S join  </span><br><span class="line"> (select sno,goodno from Salebill where  goodsno &#x3D; &#39;GN0002&#39;) AS SA_sno on S.sno &#x3D; SA_sno</span><br></pre></td></tr></table></figure>

<br>  


<h2 id="5、使用top选择结果集元组"><a href="#5、使用top选择结果集元组" class="headerlink" title="5、使用top选择结果集元组"></a>5、使用top选择结果集元组</h2><p>一般格式：<code>top n [percent] [with ties]</code><br>eg.查询年龄最大的三位学生的信息  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select top 3 with ties * from student  </span><br><span class="line">order by birthyear</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>关系数据库</title>
    <url>/2021/05/02/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="一、关系的完整性"><a href="#一、关系的完整性" class="headerlink" title="一、关系的完整性"></a>一、关系的完整性</h1><ol>
<li>实体完整性：对主码的约束，主属性不能为空。  </li>
<li>参照完整性：对外码的约束；关系与关系之间存在引用，外码，参照完整性规则。 <span id="more"></span>
<blockquote>
<p>构成外码的条件：<br>(1)本关系的一个(组)属性；<br>(2)与另一个关系主码相对应<br>(3)不是本关系的主码  </p>
<p>外码何时可以取空？<br>一般来说，外码可以取空值也可以不取空值。当外码在所在关系中充当主属性的地位的时候则绝对不可以取空。(也是为了保证实体完整性)</p>
</blockquote>
</li>
<li>用户定义的完整性规则  <br></li>
</ol>
<h1 id="二、关系代数"><a href="#二、关系代数" class="headerlink" title="二、关系代数"></a>二、关系代数</h1><ol>
<li>传统的集合运算<br>(1)并  (2)交  (3)差  (4)笛卡尔积  </li>
<li>专门的关系运算<br>(1)选择运算：从行的角度<br><img src="/../../img/%E9%80%89%E6%8B%A9%E8%BF%90%E7%AE%97.png" alt="选择运算" title="选择运算"><br>  
(2)投影运算：从列的角度  
eg.查询商品的名称和售价</li>
</ol>
<p><img src="/../../img/%E6%8A%95%E5%BD%B1%E8%BF%90%E7%AE%97.jpg" alt="投影运算" title="投影运算"></p>
<br>
&emsp;&emsp; (3)连接运算  
(i)θ连接运算  
步骤：a.求RxS找笛卡尔积  b.选择满足关系的元组  
(其中θ可以为≥、≤、＞、＜、≠)  
(ii)等值连接运算  
(iii)自然连接运算：从等值连接中去掉重复的列  
<br>
<br>
&emsp;&emsp;(4)除运算  

<p><img src="/../../img/%E9%99%A4%E8%BF%90%E7%AE%97.jpg" alt="除运算" title="除运算">  </p>
<br>  

<p>tips：</p>
<ol>
<li>关系模式是型(静态)，关系是值(动态)</li>
<li>关系数据模型的数据操作主要有查询、插入、删除、修改操作。  </li>
</ol>
]]></content>
      <categories>
        <category>数据库原理及应用</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库系统概述</title>
    <url>/2021/05/01/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86%E5%8F%8A%E5%BA%94%E7%94%A8/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="一、数据库系统基本概念"><a href="#一、数据库系统基本概念" class="headerlink" title="一、数据库系统基本概念"></a>一、数据库系统基本概念</h1><ol>
<li><p>数据 data</p>
</li>
<li><p>数据库 DB</p>
<span id="more"></span></li>
<li><p>数据库管理系统 DBMS<br>功能：(1)数据定义；(2)数据操纵；(3)数据库的运行管理；(4)数据库的建立与维护</p>
</li>
<li><p>数据库系统 DBS  </p>
<br>  

<p><img src="/../../img/DB_DBMS_DBS%E5%85%B3%E7%B3%BB%E5%9B%BE%E8%A7%A3.jpg" alt="DB_DBS_DBMS关系图解" title="DB_DBMS_DBS关系图解">  </p>
</li>
</ol>
<h1 id="二、数据模型"><a href="#二、数据模型" class="headerlink" title="二、数据模型"></a>二、数据模型</h1><ol>
<li>数据模型的组成要素<br>(1)数据结构：系统的动态特征<br>(2)数据操作：系统的静态特征<br>(3)完整性约束条件  </li>
<li>关系模型<br>(1)数据结构：二维表<br>基本元素：  关系、元组、属性、主码、域、分量、关系模式等<br>(2)数据操作<br>查询、插入、删除、修改<br>(3)完整性约束<br>实体完整性约束、参照完整性约束、用户自定义完整性约束  </li>
</ol>
<h1 id="三、数据库系统的体系结构"><a href="#三、数据库系统的体系结构" class="headerlink" title="三、数据库系统的体系结构"></a>三、数据库系统的体系结构</h1><p>三级模式<br><img src="/../../img/%E4%B8%89%E7%BA%A7%E6%A8%A1%E5%BC%8F%E7%BB%93%E6%9E%84.jpg" alt="三级模式结构" title="三级模式结构"></p>
<br>  
外模式-模式

<p><img src="/../../img/%E5%A4%96%E6%A8%A1%E5%BC%8F-%E6%A8%A1%E5%BC%8F.jpg" alt="外模式-模式" title="外模式-模式"></p>
<br>  

<p>模式-内模式<br><img src="/../../img/%E6%A8%A1%E5%BC%8F-%E5%86%85%E6%A8%A1%E5%BC%8F.jpg" alt="模式-内模式" title="模式-内模式">  </p>
<br>

<h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h2><p>外模式(子模式、用户模式)：是数据的局部逻辑结构，可有多个。<br>模式(逻辑模式、概念模式): 是数据的全局逻辑结构和特征描述，只有一个。<br>内模式(存储模式)：是数据的物理结构和存储方式的描述，只有一个。  </p>
<h2 id="2-二级映像功能"><a href="#2-二级映像功能" class="headerlink" title="2. 二级映像功能"></a>2. 二级映像功能</h2><p>(1)外模式/模式映像：当模式改变时，由数据库管理员对各个外模式/模式映像做相应的改变以使外模式保持不变。应用程序是依据数据的外模式编写的，从而应用程序可以不必修改。保证了数据的与程序的逻辑独立性。<br>(2)模式/内模式映像：当数据库的存储结构改变时，由数据库管理员对模式/内模式映像作相应改变，以使模式保持不变，使得外模式不变，从而应用程序也不必修改。保证了数据与程序的物理独立性。  </p>
<h2 id="3-数据库系统的特点"><a href="#3-数据库系统的特点" class="headerlink" title="3. 数据库系统的特点"></a>3. 数据库系统的特点</h2><p>(1)数据结构化 (这也是与文件系统本质的区别)<br>(2)数据冗余度低<br>(3)数据独立性高 (有逻辑独立性和物理独立性)<br>(4)数据由DBMS统一管理和控制</p>
]]></content>
      <categories>
        <category>数据库原理及应用</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>清除浮动的四种方法</title>
    <url>/2021/07/06/CSS/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E5%9B%9B%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="一、为什么要清除浮动"><a href="#一、为什么要清除浮动" class="headerlink" title="一、为什么要清除浮动"></a>一、为什么要清除浮动</h1><p>由于父级盒子很多情况下，不方便给高度，但是子盒子浮动又不占有位置，最后父级盒子高度为 0 时，就会<br>影响下面的标准流盒子。*由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响    </p>
<h1 id="二、清除浮动的本质"><a href="#二、清除浮动的本质" class="headerlink" title="二、清除浮动的本质"></a>二、清除浮动的本质</h1><ol>
<li> 清除浮动的本质是清除浮动元素造成的影响</li>
<li> 如果父盒子本身有高度，则不需要清除浮动</li>
<li> 清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度，就不会影响下面的标准流了  </li>
</ol>
<h1 id="三、清除浮动"><a href="#三、清除浮动" class="headerlink" title="三、清除浮动"></a>三、清除浮动</h1><table>
<thead>
<tr>
<th align="left">属性值</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">left</td>
<td align="left">清除左侧浮动影响</td>
</tr>
<tr>
<td align="left">right</td>
<td align="left">清除右侧浮动影响</td>
</tr>
<tr>
<td align="left">both</td>
<td align="left">清除两侧浮动影响</td>
</tr>
</tbody></table>
<h1 id="四、清除浮动方法"><a href="#四、清除浮动方法" class="headerlink" title="四、清除浮动方法"></a>四、清除浮动方法</h1><ol>
<li>额外标签法也称为隔墙法，是 W3C 推荐的做法。</li>
<li>父级添加overflow属性</li>
<li>父级添加after伪元素</li>
<li>父级添加双伪元素  </li>
</ol>
<h2 id="1-标签法"><a href="#1-标签法" class="headerlink" title="(1)标签法"></a>(1)标签法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        .father &#123;</span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: violet;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .father .son &#123;</span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: tomato;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .father .son2 &#123;</span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: tomato;</span></span><br><span class="line">        &#125;</span><br><span class="line">        .out&#123;</span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;son2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 添加一个块元素 用的额外标签法！ --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;out&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>父元素未设置宽高，不清除浮动带来的影响（父消失）<br><img src="/../../img/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A81.png" alt="浮动" title="浮动"><br>取消代码中的注释 则清除浮动，父随子的高度变化而变化<br><img src="/../../img/%E6%B5%AE%E5%8A%A82.png" alt="浮动" title="浮动">  </p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
</search>
